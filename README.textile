h1. Alchemy Readme

This is the source code for Alchemy, a configuration database system.

The main home for Alchemy is currently on GitHub:

* "https://github.com/jamespharaoh/alchemy":https://github.com/jamespharaoh/alchemy

The author's name is James Pharaoh and he can be contacted on "james@phsys.co.uk":mailto:james@phsys.co.uk.

The source code is released under the Apache Licence, version 2. The full text of the licence is included in the file
named LICENSE. It is also available online:

* "http://www.apache.org/licenses/LICENSE-2.0.html":http://www.apache.org/licenses/LICENSE-2.0.html

h2. Quick start

Alchemy is written in erlang, and a bit of Ruby. You will also need RabbitMQ and CouchDB to get things going.

First of all, get a copy of the Alchemy source code from github:

<pre>
~$ git clone https://github.com/jamespharaoh/alchemy.git
Cloning into alchemy...
remote: Counting objects: 13, done.
remote: Compressing objects: 100% (10/10), done.
remote: Total 13 (delta 1), reused 13 (delta 1)
Unpacking objects: 100% (13/13), done.
~$ cd alchemy
</pre>

You also need mochiweb:

<pre>
~alchemy$ git clone https://github.com/mochi/mochiweb.git
Cloning into mochiweb...
remote: Counting objects: 1735, done.
remote: Compressing objects: 100% (684/684), done.
remote: Total 1735 (delta 1171), reused 1537 (delta 1020)
Receiving objects: 100% (1735/1735), 753.70 KiB | 409 KiB/s, done.
Resolving deltas: 100% (1171/1171), done.
</pre>

Run rake to compile the erlang source files

<pre>
~alchemy$ rake
erlc -o build erlang/alc_misc.erl
erlc -o build erlang/mochijson2.erl
erlc -o build erlang/scratch.erl
erlc -o build erlang/alc_hyper.erl
erlc -o build erlang/alc_main.erl
erlc -o build erlang/alc_console_client.erl
erlc -o build erlang/alc_boot.erl
erlc -o build erlang/alc_mq.erl
erlc -o build erlang/alc_server.erl
erlc -o build erlang/alc_store.erl
erlc -o build erlang/alc_console.erl
</pre>

Next, start the server. This takes a server name, we'll use "test":

<pre>
alchemy$ ./alchemy-server test
Alchemy (development version)
Server name: test
Queue name: alchemy-server-test
Ready
</pre>

And finally start the client, in a separate terminal. We pass the same server name here:

<pre>
alchemy$ ./alchemy-client test
test> 
</pre>

You can enter commands here. The "help" command will give you a list of other
things you can try. When you want to shut down the server, send the command
"shutdown":

<pre>
alchemy$ ./alchemy-client test
test> shutdown
</pre>

And you should see the server exit in the other window:

<pre>
alchemy$ ./alchemy-server test
Alchemy (development version)
Server name: test
Queue name: alchemy-server-test
Ready
Connection from james@simba (sidrbrfpmk)
Got command: shutdown
Shutting down
Shutdown complete
</pre>

h2. Available commands

h3. Shutdown

*Syntax:*

<pre>
shutdown
</pre>

*Description:*

Shuts down the configuration database server process.
